{"version":3,"sources":["keywordwidget_5.x.js"],"names":["require","$","ploneVersionSelect2","fn","select2","init","registerTemplate","widget","data","loading","_resultId","text","append","i18n","label_new","window","ftwKeywordWidget","self","document","trigger","name","templateFunction","templates","hasOwnProperty","console","warn","isFunction","getTemplate","fallback","setSelect2Template","config","template","initWidget","ajaxOptions","templateSelection","templateResult","language","noResults","label_no_result","searching","label_searching","loadingMore","label_loading_more","inputTooShort","args","remainingChars","minimum","input","length","label_tooshort_prefix","label_tooshort_postfix","placeholder","label_placeholder","ajax","params","q","term","page","processResults","cache","extend","ftwKwWidgetSelect2","on","event","newTermsField","this","parent","find","newAddedTerms","map","val","i","value","allSelectedTerms","newSelectedTerms","indexOf","join","addClass","tags","each","index","e","parents","prev","define"],"mappings":"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","file":"ftw-keywordwidget-compiled.js","sourcesContent":["require([\n  'jquery'\n], function($) {\n    'use strict';\n\n    // Plone currently loads select2 v3.5\n    var ploneVersionSelect2 = $.fn.select2 || null;\n\n    if (ploneVersionSelect2) {\n        delete $.fn.select2;\n    }\n\n\n    require([\n      'select2'\n    ], function(select2) {\n\n        // Store the version we've just loaded for our event handlers to use\n        $.fn.ftwKwWidgetSelect2 = $.fn.select2;\n\n        var self = {};\n        var templates = {};\n\n\n        function init() {\n\n            // Special template to indicate new terms\n            registerTemplate(\"defaultResultTemplate\", function (widget) {\n              return function (data) {\n                if (!data.loading && !data._resultId) {\n                    return $('<span class=\"newTag\" />')\n                    .text(data.text)\n                    .append($('<span class=\"newTagHint\" />').text(widget.data(\"select2config\").i18n.label_new));\n                } else {\n                    return data.text;\n                }\n              };\n            });\n            // Required for event handlers below - which need the correct version of select2\n            window.ftwKeywordWidget = self;\n\n            $(document).trigger(\"ftwKeywordWidgetInit\");\n        }\n\n        function registerTemplate(name, templateFunction) {\n            if (templates.hasOwnProperty(name)) {\n                console.warn(\"A template with the name '\" + name + \"' is already registered.\");\n                return;\n            }\n            if (!$.isFunction(templateFunction)) {\n                console.warn(\"The given template is not a function. A template needs to be a function.\");\n                return;\n            }\n            templates[name] = templateFunction;\n        }\n\n        function getTemplate(name, fallback, widget) {\n            if (templates.hasOwnProperty(name)) {\n                return templates[name](widget);\n            } else if (templates.hasOwnProperty(fallback)) {\n                return templates[fallback](widget);\n            }\n            return null;\n        }\n\n        function setSelect2Template(config, name, template) {\n            if (!template) {\n                return;\n            }\n            config[name] = template;\n        }\n\n        function initWidget(widget) {\n            var config = widget.data(\"select2config\");\n            var i18n = config.i18n;\n            var ajaxOptions = widget.data(\"ajaxoptions\");\n            var templateSelection = widget.data(\"templateselection\");\n            var templateResult = widget.data(\"templateresult\");\n\n            // Update language from Backend\n            config.language = {\n              noResults: function(){\n                return i18n.label_no_result;\n              },\n              searching: function () {\n                return i18n.label_searching;\n              },\n              loadingMore: function () {\n                return i18n.label_loading_more;\n              },\n              inputTooShort: function (args) {\n                var remainingChars = args.minimum - args.input.length;\n\n                var message = i18n.label_tooshort_prefix + remainingChars + i18n.label_tooshort_postfix;\n\n                return message;\n              }\n            };\n\n            // Update placholder with translated string\n            config.placeholder = i18n.label_placeholder;\n\n            // Register templateResult\n            setSelect2Template(config, \"templateResult\",\n                               self.getTemplate(templateResult, \"defaultResultTemplate\", widget));\n\n            // Register templateSelection\n            setSelect2Template(config, \"templateSelection\",\n                               self.getTemplate(templateSelection, \"defaultSelectionTemplate\", widget));\n\n            // Add and Update config for remote data\n            if (ajaxOptions) {\n              config.ajax = {\n                data: function (params) {\n                  return {\n                    q: params.term,\n                    page: params.page || 1\n                  };\n                },\n                processResults: function (data, params) {\n                  params.page = params.page || 1;\n                  return data;\n                },\n                cache: true\n              };\n\n              $.extend(config.ajax, ajaxOptions);\n            }\n\n            $(widget).ftwKwWidgetSelect2(config).on('change', function(event){\n                var newTermsField = $(this).parent().find('[id$=\"_new\"]');\n                if (newTermsField.length === 0) {\n                  return;\n                }\n\n                // They're probably not really selected but added manually.\n                var newAddedTerms = $.map($(this).find('[data-select2-tag=\"true\"]'), function(val, i){ return val.value; });\n\n                var allSelectedTerms = $(this).data('select2').val() || [];\n                var newSelectedTerms = $.map(newAddedTerms, function(val, i){\n                  if (allSelectedTerms.indexOf(val) !== -1) {\n                    return val;\n                  }\n                });\n                newTermsField.val(newSelectedTerms.join('\\n'));\n            }).parent().addClass(config.tags ? 'select2tags' : '');\n\n            $(document).trigger(\"ftwKeywordWidgetInitWidget\", [widget]);\n        }\n\n        self.initWidget = initWidget;\n        self.registerTemplate = registerTemplate;\n        self.getTemplate = getTemplate;\n        self.init = init;\n\n        // No need to wait for window.load() with requirejs\n        init();\n        $('.keyword-widget:visible').each(function(index, widget){\n          window.ftwKeywordWidget.initWidget($(widget));\n        });\n\n        // select2 has problems getting the correct width of the placeholder element if the content is hidden and select2 gets initialized.\n        // See https://github.com/select2/select2/issues/291\n        $(\"form.enableFormTabbing > nav.autotoc-nav a, select.formTabs a, ul.formTabs a\").on(\"click\", function (e, index) {\n          $('.keyword-widget:visible').each(function(index, widget){\n            window.ftwKeywordWidget.initWidget($(widget));\n          });\n        });\n\n        $(document).on(\"onLoad OverlayContentReloaded\", \".overlay\", function() {\n          $('.keyword-widget:visible').each(function(index, widget){\n            window.ftwKeywordWidget.initWidget($(widget));\n          });\n        });\n\n        $(document).on('focus', '.select2-selection.select2-selection--single', function(event){\n          $(this).parents('.select2-container').prev().ftwKwWidgetSelect2('open');\n        });\n\n        if (ploneVersionSelect2) {\n            delete $.fn.select2;\n            $.fn.select2 = ploneVersionSelect2;\n        }\n\n        return self;\n\n    });\n\n});\n\ndefine(\"keywordwidget_5.x\", function(){});\n\n"]}